name: run-tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.2 ]
        laravel: [ 10.* ]
        dependency-version: [ prefer-stable ]
        include:
          - laravel: 10.*
    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_CONNECTION: mysql
      DB_DATABASE_TESTING: testing
      DB_DATABASE: testing
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_PORT: 33306
      BROADCAST_DRIVER: log
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_CONNECTION: mysql
      SCOUT_DRIVER: 'null'
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Start MYSql
        run: sudo /etc/init.d/mysql start

      - name: Boot Laravel application
        run: |
          cp .env.ci .env
          php artisan key:generate

#      - name: Run LaraStan
#        run: |
#          composer analyse

      - name: Execute tests
        run: |
          php artisan test --parallel
